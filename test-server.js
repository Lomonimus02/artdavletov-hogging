// –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API
const express = require('express');
const cors = require('cors');
const axios = require('axios');

const app = express();
const PORT = 3001;

app.use(cors());
app.use(express.json());

// –¢–µ—Å—Ç–æ–≤—ã–π endpoint –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram
app.post('/api/contact', async (req, res) => {
  try {
    const { name, email, phone, message, source } = req.body;

    // –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
    if (!name || !email || !message) {
      return res.status(400).json({
        error: '–û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è: –∏–º—è, email, —Å–æ–æ–±—â–µ–Ω–∏–µ'
      });
    }

    // –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    const botToken = '8324078996:AAFXqv17aurMtN1ONjtpEzo9DULAPPd71ss';
    const chatId = '1412400648';

    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è Telegram
    const sourceText = source === 'home' ? '–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞' : '–°—Ç—Ä–∞–Ω–∏—Ü–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤';
    const phoneText = phone ? `\n–¢–µ–ª–µ—Ñ–æ–Ω: ${phone}` : '';

    const telegramMessage = `–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Å–∞–π—Ç–∞!

–ò—Å—Ç–æ—á–Ω–∏–∫: ${sourceText}
–ò–º—è: ${name}
Email: ${email}${phoneText}

–°–æ–æ–±—â–µ–Ω–∏–µ:
${message}

–í—Ä–µ–º—è: ${new Date().toLocaleString('ru-RU', { timeZone: 'Europe/Moscow' })}`;

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram –¥–≤—É–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
    const telegramApiUrl = `https://api.telegram.org/bot${botToken}/sendMessage`;

    // –°–ø–∏—Å–æ–∫ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π
    const chatIds = [chatId, '378856303'];

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∂–¥–æ–º—É –ø–æ–ª—É—á–∞—Ç–µ–ª—é
    const sendPromises = chatIds.map(async (currentChatId) => {
      try {
        await axios.post(telegramApiUrl, {
          chat_id: currentChatId,
          text: telegramMessage,
          parse_mode: 'HTML'
        });
        console.log(`–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${currentChatId}`);
      } catch (error) {
        console.error(`–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${currentChatId}:`, error);
      }
    });

    // –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—Å–µ—Ö –æ—Ç–ø—Ä–∞–≤–æ–∫
    await Promise.allSettled(sendPromises);

    res.json({
      message: '–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!'
    });

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ –æ—à–∏–±–∫–æ–π Telegram API
    if (axios.isAxiosError(error) && error.response) {
      console.error('Telegram API error:', error.response.data);
    }

    res.status(500).json({
      error: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è'
    });
  }
});

app.listen(PORT, () => {
  console.log(`üöÄ –¢–µ—Å—Ç–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:${PORT}`);
  console.log(`üì± –¢–µ—Å—Ç–∏—Ä—É–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π: POST http://localhost:${PORT}/api/contact`);
});
