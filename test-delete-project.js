// –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–æ–≤
const axios = require('axios');

async function testDeleteProject() {
  try {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞...');
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ (ID 1)
    const projectId = 1;
    const apiUrl = `http://localhost:3000/api/admin/static-projects/${projectId}`;
    
    console.log(`üìç –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –ø—Ä–æ–µ–∫—Ç —Å ID: ${projectId}`);
    
    const response = await axios.delete(apiUrl, {
      headers: {
        'x-admin-session': 'true'
      }
    });

    if (response.status === 200) {
      console.log('‚úÖ –ü—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!');
      console.log('Response:', response.data);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–æ–µ–∫—Ç –±–æ–ª—å—à–µ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤ –ø—É–±–ª–∏—á–Ω–æ–º API
      console.log('\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—É–±–ª–∏—á–Ω—ã–π API...');
      const publicResponse = await axios.get('http://localhost:3000/api/projects');
      const projects = publicResponse.data;
      const deletedProject = projects.find(p => p.id === projectId);
      
      if (!deletedProject) {
        console.log('‚úÖ –ü—Ä–æ–µ–∫—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Å–∫—Ä—ã—Ç –∏–∑ –ø—É–±–ª–∏—á–Ω–æ–≥–æ API');
      } else {
        console.log('‚ùå –ü—Ä–æ–µ–∫—Ç –≤—Å–µ –µ—â–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤ –ø—É–±–ª–∏—á–Ω–æ–º API');
      }
      
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è');
      console.log('Status:', response.status);
      console.log('Data:', response.data);
    }

  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞:', error.message);
    if (error.response) {
      console.log('API Error:', error.response.data);
      console.log('Status:', error.response.status);
    }
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞ (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
async function restoreProject() {
  try {
    console.log('\nüîÑ –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ–µ–∫—Ç –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...');
    
    const fs = require('fs');
    const path = require('path');
    
    const deletedProjectsPath = path.join(process.cwd(), 'data', 'deleted-projects.json');
    
    // –û—á–∏—â–∞–µ–º —Å–ø–∏—Å–æ–∫ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤
    fs.writeFileSync(deletedProjectsPath, JSON.stringify([], null, 2));
    
    console.log('‚úÖ –ü—Ä–æ–µ–∫—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è:', error.message);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testDeleteProject().then(() => {
  console.log('\nüí° –î–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ: node test-delete-project.js restore');
});

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
if (process.argv[2] === 'restore') {
  restoreProject();
}
