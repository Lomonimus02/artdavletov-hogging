// –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram
// –ó–∞–ø—É—Å–∫: node test-telegram.js

const axios = require('axios');

async function testTelegramAPI() {
  try {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram...');
    
    const testData = {
      name: '–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
      email: 'test@example.com',
      phone: '+7 999 123 45 67',
      message: '–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Telegram',
      source: 'home'
    };

    const response = await axios.post('http://localhost:3001/api/contact', testData, {
      headers: {
        'Content-Type': 'application/json'
      }
    });

    if (response.status === 200) {
      console.log('‚úÖ –¢–µ—Å—Ç —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–π–¥–µ–Ω!');
      console.log('üì± –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Telegram - –¥–æ–ª–∂–Ω–æ –ø—Ä–∏–π—Ç–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ');
      console.log('Response:', response.data);
    } else {
      console.log('‚ùå –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ–π–¥–µ–Ω');
      console.log('Status:', response.status);
      console.log('Data:', response.data);
    }

  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:');
    
    if (error.response) {
      console.log('Status:', error.response.status);
      console.log('Error:', error.response.data);
    } else {
      console.log('Error:', error.message);
    }
    
    console.log('\nüí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
    console.log('1. –ü—Ä–æ–µ–∫—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω (npm run dev)');
    console.log('2. –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ .env.local');
    console.log('3. –ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏–ª–∏ Chat ID');
  }
}

testTelegramAPI();
